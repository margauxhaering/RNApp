runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
load("~/Desktop/facs_Limb_Muscle_seurat_tiss.Robj", verbose=TRUE)
install.packages("Seruat")
install.packages("Seurat")
load("~/Desktop/facs_Limb_Muscle_seurat_tiss.Robj", verbose=TRUE)
BiocManager::install("Seurat")
load("~/Desktop/facs_Limb_Muscle_seurat_tiss.Robj", verbose=TRUE)
load("~/Desktop/facs_Limb_Muscle_seurat_tiss.Robj")
library(Seurat)
library("Seurat")
library(Seurat)
load("~/Desktop/facs_Limb_Muscle_seurat_tiss.Robj")
yiss
tiss
head(tiss)
load("~/Desktop/droplet_Limb_Muscle_seurat_tiss.Robj")
tiss
tiss[raw.data]
tiss@raw.data
tss@assays@RNA@counts
tiss@assays@RNA@counts
tiss@assay@RNA@counts
tiss@assay$RNA@counts
tiss@raw.data
load("~/Desktop/cluster.4.txt")
csv.reader("~/Desktop/cluster.4.txt", header = T)
read.csv("~/Desktop/cluster.4.txt", header = T)
read.csv("~/Desktop/cluster.4.txt", header = T, sep = "\t")
tab <- read.csv("~/Desktop/cluster.4.txt", header = T, sep = "\t")
tab <- read.csv("~/Desktop/cluster.4.txt", header = T, sep = "\t")
for (line in tab){
if (tab[i,"MEM.SHIP"] < 0.7){
tab <- tab[-i,]
}
}
for (i in tab){
if (tab[i,"MEM.SHIP"] < 0.7){
tab <- tab[-i,]
}
}
tab <- read.csv("~/Desktop/cluster.4.csv", header = T, sep = "\t")
tab
tab <- tab[order(MEM.SHIP),]
tab <- tab[order("MEM.SHIP"),]
tab
tab <- read.csv("~/Desktop/cluster.4.csv", header = T, sep = "\t")
tab
tab <- tab[order(tab[,2]),]
tab
for (i in tab){
if(tab[i,2] < 0.7){
tab <- tab[-i,]
}
}
for (i in tab){
if(tab[i,2] < 0.7){
tab <- tab[-i,]
i +=1
}
}
i +=1
i = i+1
tab
if (tab[i,2]< 0.7) {
tab <-tab[-i,]
}
write.table(tab, "~/Desktop/he.csv")
tab <- read.csv("~/Desktop/cluster.4.csv", header = T, sep = "\t")
tab
tab <- tab[order(tab[,2]),]
tab
wirte.csv(tab, "~/Desktop/he.csv")
write.csv(tab, "~/Desktop/he.csv")
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
library(plotly)
library(dplyr)
data_o <- as.data.frame(read.csv(file.choose(), header = T, sep = '\t'))
row.names(data_o) <- data_o[,1]
data_o <- data_o[,-1]
data_o <- log1p(data_o)
groupdf <- data.frame(colnames(data_o),c("3MO","3MO","3MO","3MO","3MO","12MO","12MO","12MO","12MO","12MO","21MO","21MO","21MO","21MO","21MO"))
colnames(groupdf) <- c('rep','group')
rep <- groupdf$rep
groups <- groupdf$group
name <-  groupdf$rep
group <- data.frame(groups, name, row.names = rep)
data <- t(data_o[apply(data_o, 1, var) != 0, ])
data.pca.all <- prcomp(data,center = T,scale. = T)
data <- data.frame(data.pca.all$x)
data['name'] <- name
data <- left_join(x = data, y = group, by = "name")
plot_ly(
data = data,
x =~PC1,
y = ~PC2,
color = ~factor(groups),
text = ~name,
textposition = "top right",
type = "scatter",
mode = "markers+text"
)
data_o <- as.data.frame(read.csv(file.choose(), header = T, sep = '\t'))
row.names(data_o) <- data_o[,1]
data_o <- data_o[,-1]
data_o <- log1p(data_o)
groupdf <- data.frame(colnames(data_o),c("3MO","3MO","3MO","3MO","15MO","15MO","15MO","15MO","24MO","24MO","24MO","24MO"))
colnames(groupdf) <- c('rep','group')
rep <- groupdf$rep
groups <- groupdf$group
name <-  groupdf$rep
group <- data.frame(groups, name, row.names = rep)
data <- t(data_o[apply(data_o, 1, var) != 0, ])
data.pca.all <- prcomp(data,center = T,scale. = T)
data <- data.frame(data.pca.all$x)
data['name'] <- name
data <- left_join(x = data, y = group, by = "name")
plot_ly(
data = data,
x =~PC1,
y = ~PC2,
color = ~factor(groups),
text = ~name,
textposition = "top right",
type = "scatter",
mode = "markers+text"
)
data_o <- as.data.frame(read.csv(file.choose(), header = T, sep = '\t'))
runApp('Desktop/RNApp/App')
data_o <- as.data.frame(read.csv(file.choose(), header = T, sep = '\t'))
row.names(data_o) <- data_o[,1]
data_o <- data_o[,-1]
data_o <- log1p(data_o)
groupdf <- data.frame(colnames(data_o),c("1MO","1MO","1MO","1MO","1MO","3MO","3MO","3MO","3MO","3MO","6MO","6MO","6MO","6MO","9MO","9MO","9MO","9MO","9MO","9MO","12MO","12MO","12MO","12MO","12MO","12MO","15MO","15MO","15MO","15MO","15MO","15MO","18MO","18MO","18MO","18MO","18MO","21MO","21MO","21MO","21MO","21MO","21MO","24MO","24MO","24MO","24MO","27MO","27MO","27MO","27MO"))
data_o <- as.data.frame(read.csv(file.choose(), header = T, sep = '\t'))
row.names(data_o) <- data_o[,1]
data_o <- data_o[,-1]
data_o <- log1p(data_o)
groupdf <- data.frame(colnames(data_o),c("1MO","1MO","1MO","1MO","1MO","3MO","3MO","3MO","3MO","3MO","6MO","6MO","6MO","6MO","6MO","9MO","9MO","9MO","9MO","9MO","9MO","12MO","12MO","12MO","12MO","12MO","12MO","15MO","15MO","15MO","15MO","15MO","15MO","18MO","18MO","18MO","18MO","18MO","21MO","21MO","21MO","21MO","21MO","21MO","24MO","24MO","24MO","24MO","27MO","27MO","27MO","27MO"))
colnames(groupdf) <- c('rep','group')
rep <- groupdf$rep
groups <- groupdf$group
name <-  groupdf$rep
group <- data.frame(groups, name, row.names = rep)
data <- t(data_o[apply(data_o, 1, var) != 0, ])
data.pca.all <- prcomp(data,center = T,scale. = T)
data <- data.frame(data.pca.all$x)
data['name'] <- name
data <- left_join(x = data, y = group, by = "name")
plot_ly(
data = data,
x =~PC1,
y = ~PC2,
color = ~factor(groups),
text = ~name,
textposition = "top right",
type = "scatter",
mode = "markers+text"
)
data_o <- as.data.frame(read.csv(file.choose(), header = T, sep = '\t'))
row.names(data_o) <- data_o[,1]
data_o <- data_o[,-1]
data_o <- log1p(data_o)
groupdf <- data.frame(colnames(data_o),c("6h","6h","15h","15h","25h","25h","WL3","WL3"))
colnames(groupdf) <- c('rep','group')
rep <- groupdf$rep
groups <- groupdf$group
name <-  groupdf$rep
group <- data.frame(groups, name, row.names = rep)
data <- t(data_o[apply(data_o, 1, var) != 0, ])
data.pca.all <- prcomp(data,center = T,scale. = T)
data <- data.frame(data.pca.all$x)
data['name'] <- name
data <- left_join(x = data, y = group, by = "name")
plot_ly(
data = data,
x =~PC1,
y = ~PC2,
color = ~factor(groups),
text = ~name,
textposition = "top right",
type = "scatter",
mode = "markers+text"
)
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
data_o <- as.data.frame(read.csv(file.choose(), header = T, sep = '\t'))
row.names(data_o) <- data_o[,1]
data_o <- data_o[,-1]
data_o <- log1p(data_o)
groupdf <- data.frame(colnames(data_o),c("615h","615h","1525h","WL3","WL3"))
groupdf <- data.frame(colnames(data_o),c("615h","615h","1525h",'1525h',"WL3","WL3"))
colnames(groupdf) <- c('rep','group')
rep <- groupdf$rep
groups <- groupdf$group
name <-  groupdf$rep
group <- data.frame(groups, name, row.names = rep)
data <- t(data_o[apply(data_o, 1, var) != 0, ])
data.pca.all <- prcomp(data,center = T,scale. = T)
data <- data.frame(data.pca.all$x)
data['name'] <- name
data <- left_join(x = data, y = group, by = "name")
plot_ly(
data = data,
x =~PC1,
y = ~PC2,
color = ~factor(groups),
text = ~name,
textposition = "top right",
type = "scatter",
mode = "markers+text"
)
# read in the results (not tested, you may need to play around with read.table parameters)
fc_res <- read.table('file_path', header = T)
# read in the results (not tested, you may need to play around with read.table parameters)
fc_res <- read.table(file.choose(), header = T)
# assign row.names
row.names(fc_res) <- fc_res$GeneID
# exclude superfluous columns
fc_res <- fc_res[, -c(1:6)]
write.table
write.table(fc_res,"~/Desktop/flies.txt", sep = "\t")
fc_res
# read in the results (not tested, you may need to play around with read.table parameters)
fc_res <- read.table(file.choose(), header = T)
fc_res
# assign row.names
row.names(fc_res) <- fc_res$Geneid
fc_res
# exclude superfluous columns
fc_res <- fc_res[, -c(1:6)]
write.table(fc_res,"~/Desktop/flies.txt", sep = "\t")
data_o <- as.data.frame(read.csv(file.choose(), header = T, sep = '\t'))
row.names(data_o) <- data_o[,1]
data_o <- data_o[,-1]
data_o <- log1p(data_o)
groupdf <- data.frame(colnames(data_o),c("1","2","3"))
colnames(groupdf) <- c('rep','group')
rep <- groupdf$rep
groups <- groupdf$group
name <-  groupdf$rep
group <- data.frame(groups, name, row.names = rep)
data <- t(data_o[apply(data_o, 1, var) != 0, ])
data.pca.all <- prcomp(data,center = T,scale. = T)
data <- data.frame(data.pca.all$x)
data['name'] <- name
data <- left_join(x = data, y = group, by = "name")
plot_ly(
data = data,
x =~PC1,
y = ~PC2,
color = ~factor(groups),
text = ~name,
textposition = "top right",
type = "scatter",
mode = "markers+text"
)
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
?BiocManafze::install
?BiocManager::install
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
install.packages(c("broom", "cli", "dbplyr", "gh", "packrat", "pkgload", "processx", "remotes", "tinytex"))
shiny::runApp('Desktop/RNApp/App')
?sapply
shiny::runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
?ifelse
?if
()
?if
))
?else
runApp('Desktop/RNApp/App')
runApp()
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
runApp()
runApp('Desktop/RNApp/App')
BiocManager::install("Diffbind")
BiocManager::install("DiffBind")
library(DiffBind)
shiny::runApp('Desktop/RNApp/App')
runApp()
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
install.packages(c("bitops", "brio", "cli", "haven", "httpuv", "jquerylib", "knitr", "later", "RSQLite", "scatterpie", "shadowtext", "shinydashboardPlus", "survival", "V8"))
install.packages(c("bitops", "brio", "cli", "haven", "httpuv", "jquerylib", "knitr", "later", "RSQLite", "scatterpie", "shadowtext", "shinydashboardPlus", "survival", "V8"))
install.packages(c("bitops", "brio", "cli", "haven", "httpuv", "jquerylib", "knitr", "later", "RSQLite", "scatterpie", "shadowtext", "shinydashboardPlus", "survival", "V8"))
install.packages(c("bitops", "brio", "cli", "haven", "httpuv", "jquerylib", "knitr", "later", "RSQLite", "scatterpie", "shadowtext", "shinydashboardPlus", "survival", "V8"))
shiny::runApp('Desktop/RNApp/App')
runApp()
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
?freadf
?fread
counts_matrix<- data.frame(read.csv(file.choose()), row.names = 1) #select the mean file
counts_matrix
counts_matrix<- data.frame(fread(file.choose()), row.names = 1)
counts_matrix
group <- read.csv(fread(file.choose(), header = FALSE),header = T)
group <- read.csv(fread(file.choose(), header = FALSE),header = T)
group <- read.csv(fread(file.choose(), header = FALSE),row.names = 1)
counts_matrix<- data.frame(fread(file.choose()), row.names = 1)
counts_matrix<- data.frame(fread(file.choose()), row.names = 1)
group <- data.frame(fread(file.choose(), header = FALSE),row.names = 1)
group
group <- data.frame(fread(file.choose(), header = FALSE),row.names = 1)
group
groupList <-
lapply(unique(group$V2), function(x) {
group[group$V2 == x, ]$V1
})
groupd <- as.data.frame(group)
rep <- groupd$V1
group <- groupd$V2
groupdf <- data.frame(group, row.names = rep)
design <- formula(as.formula(paste("~", paste(colnames(as.data.frame(group)), collapse = "+"))))
dds <- DESeqDataSetFromMatrix(counts_matrix, colData=vgroupdf, design=design)
dds <- DESeqDataSetFromMatrix(counts_matrix, colData=groupdf, design=design)
groupdf
counts_matrix
group <- data.frame(fread(file.choose(), header = T),row.names = 1)
groupd <- as.data.frame(group)
rep <- groupd$V1
group <- groupd$V2
groupdf <- data.frame(group, row.names = rep)
design <- formula(as.formula(paste("~", paste(colnames(as.data.frame(group)), collapse = "+"))))
groupdf
group <- data.frame(fread(file.choose(), header = FALSE),row.names = 1)
groupd <- as.data.frame(group)
rep <- groupd$V1
group <- groupd$V2
groupdf <- data.frame(group, row.names = rep)
design <- formula(as.formula(paste("~", paste(colnames(as.data.frame(group)), collapse = "+"))))
groupdf
groupdf <- groupdf[-1,]
groupdf
group <- data.frame(fread(file.choose(), header = FALSE),row.names = 1)
groupd <- as.data.frame(group)
rep <- groupd$V1
group <- groupd$V2
groupdf <- data.frame(group, row.names = rep)
groupdf <- groupdf[,-1]
design <- formula(as.formula(paste("~", paste(colnames(as.data.frame(group)), collapse = "+"))))
groupdf
group <- data.frame(fread(file.choose(), header = FALSE),row.names = 1)
groupd <- as.data.frame(group)
rep <- groupd$V1
group <- groupd$V2
groupdf <- data.frame(group, row.names = rep)
design <- formula(as.formula(paste("~", paste(colnames(as.data.frame(group)), collapse = "+"))))
groupdf
group <- data.frame(fread(file.choose(), header = FALSE),row.names = 1)
groupd <- as.data.frame(group)
rep <- groupd$V1
group <- groupd$V2
groupdf <- data.frame(group, row.names = rep)
design <- formula(as.formula(paste("~", paste(colnames(as.data.frame(group)), collapse = "+"))))
groupdf
dds <- DESeqDataSetFromMatrix(counts_matrix, colData=groupdf, design=design)
dds <- DESeq(dds)
result <- results(dds)
result
group
groupss <- data.frame(fread(file.choose(), header = FALSE),row.names = 1)
groupss
groupList <-  # set the groups
lapply(unique(group), function(x) {
groupss[group == x, ]$rep
})
result
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
result
?p.adjust
result_mat <- as.matrix(var$result)
result_mat <- as.matrix(result)
reesult_mat
result_mat
p <- result_mat["pvalue"]
p
p <- result_mat$pvalue
p <- result_mat[5,]
p
p <- result_mat[,5]
p
p <- as.data.frame(result_mat[,5])
p
names(p) <- "pvalue"
p
head(p)
p$padj <- p.adjust(p$pvalue, 'fdr')
p
p$padj <- p.adjust(p$pvalue, 'hommel')
p
p$padj <- p.adjust(p$pvalue, 'hommel')
p$padj <- p.adjust(p$pvalue, 'bonferroni')
p
p$padj <- p.adjust(p$pvalue, 'holm')
p
p$padj <- p.adjust(p$pvalue, 'fdr')
p
result <- results(dds,pAdjustMethod = "fdr")
results
result <- results(dds, pAdjustMethod = "fdr")
result
result <- results(dds, pAdjustMethod = "BH")
result
result <- results(dds, pAdjustMethod = "holm")
result
result <- results(dds, pAdjustMethod = "fdr")
result
colData(dds)
head(groupdf)
desing
design
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp()
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
View(result_mat)
View(result_mat)
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
runApp()
runApp()
runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
shiny::runApp('Desktop/RNApp/App')
runApp('Desktop/RNApp/App')
?mfuzz
v <- 1:12 # initialization of a vector
v+2 # add 2 to each element of v
v * -12:-1 # product element by element
v + 1:3 # the shortest vector is recycled
v
( m <- matrix(v, nrow = 3, ncol = 4) )
c()
a = 5:8
b = c(5:8)
?plot.ts
plot.ts(c(5,3,7,8,3))
plot.ts(5,3,7,8,3)
?plot.ts
paste(1:4)
paste("xyz", 1:10, sep = "") # what is the difference?
paste("xyz", c(2,5,7, "test", 4.5))
?overlap.plot
shiny::runApp('Desktop/RNApp/App')
