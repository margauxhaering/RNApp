shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
?plotly
?plot_ly
shiny::runApp()
usePackage <- function(p)
{
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage(shiny)
usePackage("shiny")
usePackage("shinydashboard")
BioCPackage <- funtion(p)
BioCPackage <- function(p)
{
if (!is.element(p, installed.packages()[,1]))
BiocManager::install(p, dep = TRUE)
require(p, character.only = TRUE)
}
BioCPackage("org.Mm.eg.db")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
novel_miRNA <- as.matrix(file.choose())
novel_miRNA
novel_miRNA <- as.matrix(read.csv(file.choose()))
novel_miRNA
novel_miRNA <- as.matrix(read.csv(file.choose(), header = T, sep = '\t'))
novel_miRNA
dds <- DESeqDataSetFromMatrix(countData=novel_miRNA,
colData=metadata,
design=~dex,
tidy=TRUE)
dds <- DESeqDataSetFromMatrix(countData=novel_miRNA,
tidy=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
BiocManager::install("edgeR")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sampleReplicate <- paste("S", rep(1:3, each=2), sep="")
sampleReplicate
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
